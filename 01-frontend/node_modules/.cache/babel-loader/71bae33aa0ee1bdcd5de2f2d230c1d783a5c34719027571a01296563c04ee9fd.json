{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIRHOT\\\\TechCareerFinalApp\\\\TechCareer_TodoFullstackApp\\\\01-frontend\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todoList,\n  todos,\n  setTodos,\n  setNewTodo,\n  setUpdateTodo,\n  setUpdatingTodo\n}) => {\n  _s();\n  const [selectedTodo, setSelectedTodo] = useState(false);\n  function handleSetIsDone(id) {\n    const updatedTodos = [...todos];\n    const foundTodo = updatedTodos.find(t => t.id === id);\n    if (foundTodo) {\n      foundTodo.isDone = !foundTodo.isDone;\n    }\n    setTodos(updatedTodos);\n  }\n  function handleGetDoneTodos() {\n    setTodos(() => todoList.filter(todo => todo.isDone));\n  }\n  function handleGetUndoneTodos() {\n    setTodos(() => todoList.filter(todo => !todo.isDone));\n  }\n  function handleGetAllTodos() {\n    setTodos(todoList);\n  }\n  function handleDeleteTodo(id) {\n    setTodos(() => todoList.filter(todo => id !== todo.id));\n    todoList = todoList.filter(todo => todo.id !== id);\n  }\n  function handleUpdateTodo(id) {\n    setNewTodo(todoList.find(todo => todo.id === id).task);\n    setUpdateTodo(false);\n  }\n  function handleSetUpdatingTodo(id) {\n    setUpdatingTodo(todoList.find(todo => todo.id === id));\n  }\n  function handleSelectedTodo(id) {\n    if (selectedTodo.id !== id) {\n      setSelectedTodo(todoList.find(todo => todo.id === id));\n    } else {\n      setSelectedTodo( /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this));\n    }\n  }\n  ///*****************************BURDA KALDIN***************************** */\n  function handleSetDoneSelectedTodo() {\n    setSelectedTodo(prevSelectedTodo => ({\n      ...prevSelectedTodo,\n      isDone: true\n    }));\n    setTodos(currentTodos => currentTodos.map(todo => todo.id === selectedTodo.id ? {\n      ...todo,\n      isDone: !todo.isDone\n    } : todo));\n  }\n  function handleSetUndoneSelectedTodo() {\n    setSelectedTodo(prevSelectedTodo => ({\n      ...prevSelectedTodo,\n      isDone: false\n    }));\n    setTodos(currentTodos => currentTodos.map(todo => todo.id === selectedTodo.id ? {\n      ...todo,\n      isDone: !todo.isDone\n    } : todo));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-initial-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetAllTodos(),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetUndoneTodos(),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetDoneTodos(),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Todo, {\n            id: todo.id,\n            isDone: todo.isDone,\n            setIsDone: handleSetIsDone,\n            task: todo.task,\n            deleteTodo: handleDeleteTodo,\n            updateTodo: handleUpdateTodo,\n            setCanUpdate: setUpdateTodo,\n            setUpdatingTodo: handleSetUpdatingTodo,\n            selectedTodo: selectedTodo,\n            setSelectedTodo: handleSelectedTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-bottom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSetIsDone(selectedTodo.id),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSetIsDone(selectedTodo.id),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"EJAioy6oWpVLP3Bad1yZK0wqZK4=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","Todo","jsxDEV","_jsxDEV","TodoList","todoList","todos","setTodos","setNewTodo","setUpdateTodo","setUpdatingTodo","_s","selectedTodo","setSelectedTodo","handleSetIsDone","id","updatedTodos","foundTodo","find","t","isDone","handleGetDoneTodos","filter","todo","handleGetUndoneTodos","handleGetAllTodos","handleDeleteTodo","handleUpdateTodo","task","handleSetUpdatingTodo","handleSelectedTodo","fileName","_jsxFileName","lineNumber","columnNumber","handleSetDoneSelectedTodo","prevSelectedTodo","currentTodos","map","handleSetUndoneSelectedTodo","children","className","onClick","setIsDone","deleteTodo","updateTodo","setCanUpdate","_c","$RefreshReg$"],"sources":["D:/SIRHOT/TechCareerFinalApp/TechCareer_TodoFullstackApp/01-frontend/src/components/TodoList.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({\r\n  todoList,\r\n  todos,\r\n  setTodos,\r\n  setNewTodo,\r\n  setUpdateTodo,\r\n  setUpdatingTodo,\r\n}) => {\r\n  const [selectedTodo, setSelectedTodo] = useState(false);\r\n\r\n  function handleSetIsDone(id) {\r\n    const updatedTodos = [...todos];\r\n    const foundTodo = updatedTodos.find((t) => t.id === id);\r\n    if (foundTodo) {\r\n      foundTodo.isDone = !foundTodo.isDone;\r\n    }\r\n    setTodos(updatedTodos);\r\n  }\r\n\r\n  function handleGetDoneTodos() {\r\n    setTodos(() => todoList.filter((todo) => todo.isDone));\r\n  }\r\n\r\n  function handleGetUndoneTodos() {\r\n    setTodos(() => todoList.filter((todo) => !todo.isDone));\r\n  }\r\n\r\n  function handleGetAllTodos() {\r\n    setTodos(todoList);\r\n  }\r\n\r\n  function handleDeleteTodo(id) {\r\n    setTodos(() => todoList.filter((todo) => id !== todo.id));\r\n    todoList = todoList.filter((todo) => todo.id !== id);\r\n  }\r\n\r\n  function handleUpdateTodo(id) {\r\n    setNewTodo(todoList.find((todo) => todo.id === id).task);\r\n    setUpdateTodo(false);\r\n  }\r\n\r\n  function handleSetUpdatingTodo(id) {\r\n    setUpdatingTodo(todoList.find((todo) => todo.id === id));\r\n  }\r\n\r\n  function handleSelectedTodo(id) {\r\n    if (selectedTodo.id !== id) {\r\n      setSelectedTodo(todoList.find((todo) => todo.id === id));\r\n    } else {\r\n      setSelectedTodo(<Todo />);\r\n    }\r\n  }\r\n  ///*****************************BURDA KALDIN***************************** */\r\n  function handleSetDoneSelectedTodo() {\r\n    setSelectedTodo((prevSelectedTodo) => ({\r\n      ...prevSelectedTodo,\r\n      isDone: true,\r\n    }));\r\n    setTodos((currentTodos) =>\r\n      currentTodos.map((todo) =>\r\n        todo.id === selectedTodo.id ? { ...todo, isDone: !todo.isDone } : todo\r\n      )\r\n    );\r\n  }\r\n\r\n  function handleSetUndoneSelectedTodo() {\r\n    setSelectedTodo((prevSelectedTodo) => ({\r\n      ...prevSelectedTodo,\r\n      isDone: false,\r\n    }));\r\n    setTodos((currentTodos) =>\r\n      currentTodos.map((todo) =>\r\n        todo.id === selectedTodo.id ? { ...todo, isDone: !todo.isDone } : todo\r\n      )\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <b>TODO LIST</b>\r\n      <div className=\"todo-list-initial-buttons\">\r\n        <button onClick={() => handleGetAllTodos()}>All</button>\r\n        <button onClick={() => handleGetUndoneTodos()}>Todo</button>\r\n        <button onClick={() => handleGetDoneTodos()}>Done</button>\r\n      </div>\r\n\r\n      <div className=\"todo-list\">\r\n        <ul>\r\n          {/* Database verilerine gore listelenecek. */}\r\n          {todos.map((todo) => (\r\n            <li key={todo.id}>\r\n              <Todo\r\n                id={todo.id}\r\n                isDone={todo.isDone}\r\n                setIsDone={handleSetIsDone}\r\n                task={todo.task}\r\n                deleteTodo={handleDeleteTodo}\r\n                updateTodo={handleUpdateTodo}\r\n                setCanUpdate={setUpdateTodo}\r\n                setUpdatingTodo={handleSetUpdatingTodo}\r\n                selectedTodo={selectedTodo}\r\n                setSelectedTodo={handleSelectedTodo}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"todo-list-bottom-buttons\">\r\n        <button onClick={() => handleSetIsDone(selectedTodo.id)}>Done</button>\r\n        <button onClick={() => handleSetIsDone(selectedTodo.id)}>Todo</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}