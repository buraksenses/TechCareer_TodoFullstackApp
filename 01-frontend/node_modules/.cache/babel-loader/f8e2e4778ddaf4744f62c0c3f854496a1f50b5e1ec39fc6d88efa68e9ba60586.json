{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIRHOT\\\\TechCareerFinalApp\\\\TechCareer_TodoFullstackApp\\\\01-frontend\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { apiClient } from \"./service/TodoService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  setTodos,\n  setNewTodo,\n  setUpdateTodo,\n  setUpdatingTodo\n}) => {\n  _s();\n  const [selectedTodo, setSelectedTodo] = useState(false);\n  async function handleSetDone(id, doneValue) {\n    const updatedTodos = [...todos];\n    const foundTodoIndex = updatedTodos.findIndex(t => t.id === id);\n    if (foundTodoIndex !== -1) {\n      // foundTodo'yu güncelleyin\n      updatedTodos[foundTodoIndex].done = doneValue;\n      try {\n        // API isteğini bekleyin ve güncelleme yapın\n        await apiClient.put(`todos/${id}`, {\n          task: updatedTodos[foundTodoIndex].task,\n          done: doneValue\n        });\n        setTodos(updatedTodos); // API başarılı olursa güncelleme yapılır\n      } catch (error) {\n        console.error(error); // Hata işleme\n        // API isteği başarısız oldu, burada gerektiğiniz şekilde kullanıcıya bilgi verebilirsiniz\n      }\n    }\n  }\n\n  async function handleGetUndoneTodos() {\n    await apiClient.get(\"/todos\").then(response => {\n      console.log(response.data.filter(todo => !todo.done));\n      setTodos(response.data.filter(todo => !todo.done));\n    });\n  }\n  async function handleGetDoneTodos() {\n    await apiClient.get(\"/todos\").then(response => {\n      console.log(response.data);\n      setTodos(response.data.filter(todo => todo.done));\n    });\n  }\n  async function handleGetAllTodos() {\n    await apiClient.get(\"/todos\").then(response => {\n      console.log(response.data);\n      setTodos(response.data);\n    });\n  }\n  async function handleDeleteTodo(id) {\n    await apiClient.delete(`todos/${id}`).then(setTodos(() => todos.filter(todo => id !== todo.id))).catch(error => console.error(error));\n  }\n\n  //Todo icinde bulunan kalem simgesine tiklandiginda\n  //input alanina o todo objesinin bilgisini getirir.\n  function handleUpdateTodo(id) {\n    setNewTodo(todos.find(todo => todo.id === id).task);\n    setUpdateTodo(false);\n  }\n\n  //Uzerine tiklanan todo objesini selectedtodo degerine atar\n  function handleSelectedTodo(id) {\n    if (selectedTodo.id !== id) {\n      setSelectedTodo(todos.find(todo => todo.id === id));\n      setUpdatingTodo(todos.find(todo => todo.id === id));\n    } else {\n      setSelectedTodo( /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this));\n    }\n  }\n  useEffect(function () {\n    async function getTodos() {\n      await apiClient.get(\"/todos\").then(response => {\n        console.log(response.data);\n        setTodos(response.data);\n      });\n    }\n    getTodos();\n  }, [setTodos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-initial-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetAllTodos(),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetUndoneTodos(),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGetDoneTodos(),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Todo, {\n            id: todo.id,\n            task: todo.task,\n            done: todo.done,\n            setDone: handleSetDone,\n            deleteTodo: handleDeleteTodo,\n            updateTodo: handleUpdateTodo,\n            setCanUpdate: setUpdateTodo,\n            selectedTodo: selectedTodo,\n            setSelectedTodo: handleSelectedTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-bottom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSetDone(selectedTodo.id, true),\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSetDone(selectedTodo.id, false),\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"ZCZ2kD1ObqKss5UfsMdwdNL8kKE=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useEffect","useState","Todo","apiClient","jsxDEV","_jsxDEV","TodoList","todos","setTodos","setNewTodo","setUpdateTodo","setUpdatingTodo","_s","selectedTodo","setSelectedTodo","handleSetDone","id","doneValue","updatedTodos","foundTodoIndex","findIndex","t","done","put","task","error","console","handleGetUndoneTodos","get","then","response","log","data","filter","todo","handleGetDoneTodos","handleGetAllTodos","handleDeleteTodo","delete","catch","handleUpdateTodo","find","handleSelectedTodo","fileName","_jsxFileName","lineNumber","columnNumber","getTodos","children","className","onClick","map","setDone","deleteTodo","updateTodo","setCanUpdate","_c","$RefreshReg$"],"sources":["D:/SIRHOT/TechCareerFinalApp/TechCareer_TodoFullstackApp/01-frontend/src/components/TodoList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { apiClient } from \"./service/TodoService\";\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  setTodos,\r\n  setNewTodo,\r\n  setUpdateTodo,\r\n  setUpdatingTodo,\r\n}) => {\r\n  const [selectedTodo, setSelectedTodo] = useState(false);\r\n\r\n  async function handleSetDone(id, doneValue) {\r\n    const updatedTodos = [...todos];\r\n    const foundTodoIndex = updatedTodos.findIndex((t) => t.id === id);\r\n\r\n    if (foundTodoIndex !== -1) {\r\n      // foundTodo'yu güncelleyin\r\n      updatedTodos[foundTodoIndex].done = doneValue;\r\n\r\n      try {\r\n        // API isteğini bekleyin ve güncelleme yapın\r\n        await apiClient.put(`todos/${id}`, {\r\n          task: updatedTodos[foundTodoIndex].task,\r\n          done: doneValue,\r\n        });\r\n        setTodos(updatedTodos); // API başarılı olursa güncelleme yapılır\r\n      } catch (error) {\r\n        console.error(error); // Hata işleme\r\n        // API isteği başarısız oldu, burada gerektiğiniz şekilde kullanıcıya bilgi verebilirsiniz\r\n      }\r\n    }\r\n  }\r\n\r\n  async function handleGetUndoneTodos() {\r\n    await apiClient.get(\"/todos\").then((response) => {\r\n      console.log(response.data.filter((todo) => !todo.done));\r\n      setTodos(response.data.filter((todo) => !todo.done));\r\n    });\r\n  }\r\n  async function handleGetDoneTodos() {\r\n    await apiClient.get(\"/todos\").then((response) => {\r\n      console.log(response.data);\r\n      setTodos(response.data.filter((todo) => todo.done));\r\n    });\r\n  }\r\n\r\n  async function handleGetAllTodos() {\r\n    await apiClient.get(\"/todos\").then((response) => {\r\n      console.log(response.data);\r\n      setTodos(response.data);\r\n    });\r\n  }\r\n\r\n  async function handleDeleteTodo(id) {\r\n    await apiClient\r\n      .delete(`todos/${id}`)\r\n      .then(setTodos(() => todos.filter((todo) => id !== todo.id)))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  //Todo icinde bulunan kalem simgesine tiklandiginda\r\n  //input alanina o todo objesinin bilgisini getirir.\r\n  function handleUpdateTodo(id) {\r\n    setNewTodo(todos.find((todo) => todo.id === id).task);\r\n    setUpdateTodo(false);\r\n  }\r\n\r\n  //Uzerine tiklanan todo objesini selectedtodo degerine atar\r\n  function handleSelectedTodo(id) {\r\n    if (selectedTodo.id !== id) {\r\n      setSelectedTodo(todos.find((todo) => todo.id === id));\r\n      setUpdatingTodo(todos.find((todo) => todo.id === id));\r\n    } else {\r\n      setSelectedTodo(<Todo />);\r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      async function getTodos() {\r\n        await apiClient.get(\"/todos\").then((response) => {\r\n          console.log(response.data);\r\n          setTodos(response.data);\r\n        });\r\n      }\r\n      getTodos();\r\n    },\r\n    [setTodos]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <b>TODO LIST</b>\r\n      <div className=\"todo-list-initial-buttons\">\r\n        <button onClick={() => handleGetAllTodos()}>All</button>\r\n        <button onClick={() => handleGetUndoneTodos()}>Todo</button>\r\n        <button onClick={() => handleGetDoneTodos()}>Done</button>\r\n      </div>\r\n\r\n      <div className=\"todo-list\">\r\n        <ul>\r\n          {/* Database verilerine gore listelenecek. */}\r\n          {todos.map((todo) => (\r\n            <li key={todo.id}>\r\n              <Todo\r\n                id={todo.id}\r\n                task={todo.task}\r\n                done={todo.done}\r\n                setDone={handleSetDone}\r\n                deleteTodo={handleDeleteTodo}\r\n                updateTodo={handleUpdateTodo}\r\n                setCanUpdate={setUpdateTodo}\r\n                selectedTodo={selectedTodo}\r\n                setSelectedTodo={handleSelectedTodo}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"todo-list-bottom-buttons\">\r\n        <button onClick={() => handleSetDone(selectedTodo.id, true)}>\r\n          Done\r\n        </button>\r\n        <button onClick={() => handleSetDone(selectedTodo.id, false)}>\r\n          Todo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}